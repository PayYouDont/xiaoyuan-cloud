/*
 Navicat Premium Data Transfer

 Source Server         : 本机
 Source Server Type    : MySQL
 Source Server Version : 80011
 Source Host           : localhost:3306
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 80011
 File Encoding         : 65001

 Date: 27/01/2021 17:29:33
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 88 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'dynamic_routes', 'DEFAULT_GROUP', 'routes:\r\n# auth\r\n- id: auth\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /auth/**\r\n  uri: lb://auth\r\n  order: 0', '787299b186e77f204cf33ca5951c63df', '2019-07-30 14:26:08', '2020-12-28 07:07:25', NULL, '192.168.216.1', '', '', '动态路由配置', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (5, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  # redis 相关\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: \n    database: 0\n# logging日志\nlogging:\n  level:\n    com.alibaba.nacos.client.naming: error\n    com.alibaba.nacos.client.config.impl: WARN\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n# feign 配置\nfeign:\n  hystrix:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n# hystrix If you need to use ThreadLocal bound variables in your RequestInterceptor`s\n# you will need to either set the thread isolation strategy for Hystrix to `SEMAPHORE or disable Hystrix in Feign.\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true\n#请求处理的超时时间\nribbon:\n  ReadTimeout: 10000\n  ConnectTimeout: 10000\n\n## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      # 无需token访问的url,如果子模块重写这里的配置就会被覆盖\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://xiaoyuan-auth/oauth/check_token\n', 'f110416af4a609636f3412d605cacd4f', '2020-12-03 10:00:44', '2021-01-20 10:10:59', NULL, '192.168.1.196', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (55, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        #swagger接口文档允许不验证访问\n        - /webjars/**\n        - /doc.html\n        - /swagger-resources/**\n        - /favicon.ico\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '9c0c510621a7a8932ab639ff5f259cf2', '2021-01-06 08:54:50', '2021-01-21 07:54:01', NULL, '192.168.216.1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (56, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '# 数据源\nspring:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n   #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\nxiaoyuan: \n  login: \n    redirectUrl: \n      success: /index\n      fail: /login', '5886ca683d8e4d13a4ff8eae9cbda762', '2021-01-06 08:56:02', '2021-01-20 10:24:09', NULL, '192.168.216.1', '', '', '', '', '', 'yaml', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 96 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (19, 30, 'application-gateway-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  profiles:\n    active: gateway\n  #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: gateway\n      client-secret: gateway\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \n', 'a903c499be50e71427149998a04defe0', '2020-12-28 11:05:07', '2020-12-28 03:05:08', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (19, 31, 'application-gateway-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  profiles:\n    active: gateway\n  #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: gateway\n      client-secret: gateway\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \n  cloud:\n    gateway:\n      discovery:\n        locator:\n         enabled: true', 'c5061c773af786f0bc30998f06170696', '2020-12-28 11:22:22', '2020-12-28 03:22:23', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (1, 32, 'dynamic_routes', 'DEFAULT_GROUP', '', 'routes:\r\n# base-auth\r\n- id: base-auth\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /auth/**\r\n  filters:\r\n  - name: ValidateCodeGatewayFilter\r\n    args: {}\r\n  - name: PasswordDecoderFilter\r\n    args: {}\r\n  uri: lb://base-auth\r\n  order: 0\r\n# base-upms-admin\r\n- id: base-upms-admin\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /upms/**\r\n  filters:\r\n  - name: RequestRateLimiter\r\n    args: \r\n      # 限流策略\r\n      key-resolver: \'#{@remoteAddrKeyResolver}\'\r\n      # 令牌桶每秒填充率\r\n      redis-rate-limiter.burstCapacity: 20\r\n      # 令牌桶容量\r\n      redis-rate-limiter.replenishRate: 20\r\n  # 熔断\r\n  - name: Hystrix\r\n    args: \r\n      fallbackUri: \'forward:/fallback\'\r\n      name: default\r\n  uri: lb://base-upms-admin\r\n  order: 0\r\n# base-codegen\r\n- id: base-codegen\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /gen/**\r\n  filters: []\r\n  uri: lb://base-codegen\r\n  order: 0\r\n# base-weixin-admin\r\n- id: base-weixin-admin\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /weixin/**\r\n  filters: []\r\n  uri: lb://base-weixin-admin\r\n  order: 0\r\n# base-mall-admin\r\n- id: base-mall-admin\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /mall/**\r\n  filters: []\r\n  uri: lb://base-mall-admin\r\n  order: 0\r\n  ', '11be2ecc6eab103a65508efcf44f1359', '2020-12-28 11:36:58', '2020-12-28 03:36:58', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (1, 33, 'dynamic_routes', 'DEFAULT_GROUP', '', 'routes:\r\n# auth\r\n- id: auth\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /auth/**\r\n  filters:\r\n  - name: ValidateCodeGatewayFilter\r\n    args: {}\r\n  - name: PasswordDecoderFilter\r\n    args: {}\r\n  uri: lb://auth\r\n  order: 0\r\n# admin\r\n- id: admin\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /admin/**\r\n  filters:\r\n  - name: RequestRateLimiter\r\n    args: \r\n      # 限流策略\r\n      key-resolver: \'#{@remoteAddrKeyResolver}\'\r\n      # 令牌桶每秒填充率\r\n      redis-rate-limiter.burstCapacity: 20\r\n      # 令牌桶容量\r\n      redis-rate-limiter.replenishRate: 20\r\n  # 熔断\r\n  - name: Hystrix\r\n    args: \r\n      fallbackUri: \'forward:/fallback\'\r\n      name: default\r\n  uri: lb://admin\r\n  order: 0\r\n', '7f77594ca264d2789b0124773a783387', '2020-12-28 15:03:07', '2020-12-28 07:03:07', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (1, 34, 'dynamic_routes', 'DEFAULT_GROUP', '', 'routes:\r\n# auth\r\n- id: auth\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /auth/**\r\n  filters:\r\n  uri: lb://auth\r\n  order: 0', '8bfc0b112eacdc2e546e6cc9400c7c27', '2020-12-28 15:05:07', '2020-12-28 07:05:07', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (1, 35, 'dynamic_routes', 'DEFAULT_GROUP', '', 'routes:\r\n# auth\r\n- id: auth\r\n  predicates:\r\n  - name: Path\r\n    args: \r\n      _genkey_0: /auth/**\r\n  uri: lb://auth\r\n  order: 0', '787299b186e77f204cf33ca5951c63df', '2020-12-28 15:07:25', '2020-12-28 07:07:25', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 36, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/forward?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2', '09ebc8f6282deb41115d8b5578546511', '2020-12-29 15:07:34', '2020-12-29 07:07:34', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 37, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/forward?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2', '1898b6e1e6c27d6dc4c977186c8c3f5a', '2020-12-29 15:40:55', '2020-12-29 07:40:56', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 38, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/forward?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2', '09ebc8f6282deb41115d8b5578546511', '2020-12-29 15:42:05', '2020-12-29 07:42:05', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 39, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/forward?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2', '1898b6e1e6c27d6dc4c977186c8c3f5a', '2020-12-29 15:42:17', '2020-12-29 07:42:17', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 40, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/forward?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2', 'c3b2b119cec2570300c8a3aeeb71d8a5', '2021-01-04 15:17:31', '2021-01-04 07:17:31', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 41, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', 'ca359c69a21f39d80250f70b302f7be8', '2021-01-04 17:01:49', '2021-01-04 09:01:50', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 42, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '7569fa16bd15d8c979b4b0fbcf384891', '2021-01-05 10:42:40', '2021-01-05 02:42:40', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 43, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: xiaouyuan-upms-admin\n      client-secret: admin\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', 'b26c3ffd8cc2b922c00a3bbb6f1c367b', '2021-01-05 10:50:14', '2021-01-05 02:50:14', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 44, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '7569fa16bd15d8c979b4b0fbcf384891', '2021-01-05 13:42:27', '2021-01-05 05:42:28', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 45, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    #resource:\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', 'd55f85459776e79faf295d669070887d', '2021-01-05 13:45:49', '2021-01-05 05:45:49', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 46, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://base-auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '1ceb2b69f99f1f9268a605ec804193c1', '2021-01-05 13:59:40', '2021-01-05 05:59:40', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 47, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    properties:\n    #是否打印sql语句\n    show-sql: true\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://base-auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '19d2299f9d4a991618d01bbb302695f3', '2021-01-05 14:09:42', '2021-01-05 06:09:43', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 48, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://base-auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '1ceb2b69f99f1f9268a605ec804193c1', '2021-01-05 14:10:14', '2021-01-05 06:10:14', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 49, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://base-auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '1ceb2b69f99f1f9268a605ec804193c1', '2021-01-05 14:12:20', '2021-01-05 06:12:20', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 50, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    #是否打印sql语句\n    show-sql: true\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://base-auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '0effd01a394c764a818ca66b30b66cf4', '2021-01-05 16:24:46', '2021-01-05 08:24:46', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 51, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    #是否打印sql语句\n    show-sql: true\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '76e81dbae23f778a3b1861c684a25dd9', '2021-01-06 11:38:04', '2021-01-06 03:38:04', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 52, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    \n    #是否打印sql语句\n    show-sql: true\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '392e8ec9cd40b5a21e9efe90f0972987', '2021-01-06 11:38:15', '2021-01-06 03:38:15', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 53, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2', 'b91ac2cb0976a5ae718c1f8050a7b52a', '2021-01-06 15:48:33', '2021-01-06 07:48:33', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (17, 54, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: true\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\n', '377f89e86e0ec98d0245ded8d348e3b7', '2021-01-06 15:53:17', '2021-01-06 07:53:17', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (5, 55, 'application-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    suffix: .html\n    prefix: classpath:/templates/\n #数据库\n  data:\n    mongodb:\n      uri: mongodb://root:123456@192.168.1.169:27017/forward\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/forward\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name:  com.mysql.jdbc.Driver\n', 'd7b52d912b7b6d9dfc6f33b11a43b6fd', '2021-01-06 16:23:50', '2021-01-06 08:23:50', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (5, 56, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 加解密根密码\njasypt:\n  encryptor:\n    #根密码，改完密码要把base_upms.sys_datasource数据库表清空，否则代码生成器无法启动\n    password: gospell\nspring:\n  servlet:\n    multipart:\n      location: /home\n  # redis 相关\n  redis:\n    host: base-redis\n    port: 6379\n    password: \n    database: 0\n# logging日志\nlogging:\n  level:\n    com.alibaba.nacos.client.naming: error\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n# feign 配置\nfeign:\n  hystrix:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n# hystrix If you need to use ThreadLocal bound variables in your RequestInterceptor`s\n# you will need to either set the thread isolation strategy for Hystrix to `SEMAPHORE or disable Hystrix in Feign.\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true\n#请求处理的超时时间\nribbon:\n  ReadTimeout: 10000\n  ConnectTimeout: 10000\n\n## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      # 无需token访问的url,如果子模块重写这里的配置就会被覆盖\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://xiaoyuan-auth/oauth/check_token\n', '830fbd47bfa3eca32054774b2eafac73', '2021-01-06 16:24:24', '2021-01-06 08:24:24', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 57, 'base-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: admin\r\n      client-secret: admin\r\n      scope: server\r\n      # 无需token访问的url\r\n      release-urls:\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n        - /user/register\r\n        - /druid/**\r\n# 数据源\r\nspring:\r\n  #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver   ', '71a058e627ad4d42e10b587a6327b023', '2021-01-06 16:54:00', '2021-01-06 08:54:01', NULL, '192.168.216.1', 'I', '');
INSERT INTO `his_config_info` VALUES (54, 58, 'base-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: admin\r\n      client-secret: admin\r\n      scope: server\r\n      # 无需token访问的url\r\n      release-urls:\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n        - /user/register\r\n        - /druid/**\r\n# 数据源\r\nspring:\r\n  #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver   ', '71a058e627ad4d42e10b587a6327b023', '2021-01-06 16:54:29', '2021-01-06 08:54:30', NULL, '192.168.216.1', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 59, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: admin\r\n      client-secret: admin\r\n      scope: server\r\n      # 无需token访问的url\r\n      release-urls:\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n        - /user/register\r\n        - /druid/**\r\n# 数据源\r\nspring:\r\n  #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver   ', '71a058e627ad4d42e10b587a6327b023', '2021-01-06 16:54:49', '2021-01-06 08:54:50', NULL, '192.168.216.1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 60, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\r\nspring:\r\n   #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n   thymeleaf: \r\n    cache: false\r\n    mode: HTML5\r\n    prefix: classpath:/templates/\r\n', 'bb481b762d4108b16472c6feb2e0c53e', '2021-01-06 16:56:02', '2021-01-06 08:56:02', NULL, '192.168.216.1', 'I', '');
INSERT INTO `his_config_info` VALUES (5, 61, 'application-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  servlet:\n    multipart:\n      location: /home\n  # redis 相关\n  redis:\n    host: base-redis\n    port: 6379\n    password: \n    database: 0\n# logging日志\nlogging:\n  level:\n    com.alibaba.nacos.client.naming: error\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n# feign 配置\nfeign:\n  hystrix:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n# hystrix If you need to use ThreadLocal bound variables in your RequestInterceptor`s\n# you will need to either set the thread isolation strategy for Hystrix to `SEMAPHORE or disable Hystrix in Feign.\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true\n#请求处理的超时时间\nribbon:\n  ReadTimeout: 10000\n  ConnectTimeout: 10000\n\n## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      # 无需token访问的url,如果子模块重写这里的配置就会被覆盖\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://xiaoyuan-auth/oauth/check_token\n', 'd0ba0ef13783e8e7e1b24dfbdd3c93b9', '2021-01-06 16:58:44', '2021-01-06 08:58:44', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (56, 62, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\r\nspring:\r\n   #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n   thymeleaf: \r\n    cache: false\r\n    mode: HTML5\r\n    prefix: classpath:/templates/\r\n', 'bb481b762d4108b16472c6feb2e0c53e', '2021-01-06 17:22:16', '2021-01-06 09:22:16', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (56, 63, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\r\nspring:\r\n   #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n   thymeleaf: \r\n    cache: false\r\n    mode: HTML5\r\n    prefix: classpath:/templates/', 'b901b5e0acbfb98508a5fa71bba15753', '2021-01-06 17:23:41', '2021-01-06 09:23:42', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 64, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: admin\r\n      client-secret: admin\r\n      scope: server\r\n      # 无需token访问的url\r\n      release-urls:\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n        - /user/register\r\n        - /druid/**\r\n# 数据源\r\nspring:\r\n  #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver   ', '71a058e627ad4d42e10b587a6327b023', '2021-01-06 17:31:23', '2021-01-06 09:31:23', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (5, 65, 'application-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  # redis 相关\n  redis:\n    host: base-redis\n    port: 6379\n    password: \n    database: 0\n# logging日志\nlogging:\n  level:\n    com.alibaba.nacos.client.naming: error\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n# feign 配置\nfeign:\n  hystrix:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n# hystrix If you need to use ThreadLocal bound variables in your RequestInterceptor`s\n# you will need to either set the thread isolation strategy for Hystrix to `SEMAPHORE or disable Hystrix in Feign.\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true\n#请求处理的超时时间\nribbon:\n  ReadTimeout: 10000\n  ConnectTimeout: 10000\n\n## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      # 无需token访问的url,如果子模块重写这里的配置就会被覆盖\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://xiaoyuan-auth/oauth/check_token\n', '3f86dabaa6db53a02ba400ef78903a6b', '2021-01-06 17:34:03', '2021-01-06 09:34:04', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (8, 66, 'application-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    password:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\n  security:\n    oauth2:\n      storeType: jwt\n      jwt:\n        SigningKey: oauth2\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true', '2faaf1b2e28eba81427857dc5c10f0ff', '2021-01-06 18:56:34', '2021-01-06 10:56:35', NULL, '192.168.216.1', 'D', '');
INSERT INTO `his_config_info` VALUES (17, 67, 'application-admin-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: true\n  profiles:\n    active: admin\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      #请求认证的地址\n      #user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      #access-token-uri: ${auth-server}/oauth/token\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth/oauth/check_token\n      #jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        #key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  \nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 10000\n        read-timeout: 10000\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true\n', '3718f96a4d3e6e049f26f28f4c4c71a5', '2021-01-06 18:56:34', '2021-01-06 10:56:35', NULL, '192.168.216.1', 'D', '');
INSERT INTO `his_config_info` VALUES (19, 68, 'application-gateway-dev.yml', 'DEFAULT_GROUP', '', 'auth-server: http://localhost:5000\nspring:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n  profiles:\n    active: gateway\n  #配置oauth2过滤的优先级\n  oauth2:\n    resource:\n      filter-order: 3\nsecurity:\n  oauth2:\n    client:\n      client-id: gateway\n      client-secret: gateway\n      #请求认证的地址\n      user-authorization-uri: ${auth-server}/oauth/authorize \n      #请求令牌的地址\n      access-token-uri: ${auth-server}/oauth/token\n    resource:\n      jwt:\n        #解析jwt令牌所需要密钥的地址,服务启动时会调用 授权服务该接口获取jwt key，所以务必保证授权服务正常\n        key-uri: ${auth-server}/oauth/token_key \n    sso:\n      #指向登录页面的路径，即OAuth2授权服务器触发重定向到客户端的路径 ，默认为 /login\n      login-path: /login \nserver:\n  servlet:\n    session:\n      cookie:\n        # 解决  Possible CSRF detected - state parameter was required but no state could be found  问题\n        name: OAUTH2CLIENTSESSION  ', '7a1f62fe652c2d9b6b6eb834b39e617d', '2021-01-06 18:56:34', '2021-01-06 10:56:35', NULL, '192.168.216.1', 'D', '');
INSERT INTO `his_config_info` VALUES (55, 69, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: admin\r\n      client-secret: admin\r\n      scope: server\r\n      # 无需token访问的url\r\n      release-urls:\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n        - /user/register\r\n        - /druid/**\r\n# 数据源\r\nspring:\r\n  #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n  jpa:\r\n    properties:\r\n      hibernate:\r\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\r\n        ddl-auto: update\r\n    generate-ddl: true\r\n    #是否打印sql语句\r\n    show-sql: true', '0cdd4ff80fcbbf1e979b6cf076dfe331', '2021-01-07 07:44:31', '2021-01-06 23:44:32', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 70, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: admin\r\n      client-secret: admin\r\n      scope: server\r\n      # 无需token访问的url\r\n      release-urls:\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n        - /user/register\r\n        - /druid/**\r\n# 数据源\r\nspring:\r\n  #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n  jpa:\r\n    properties:\r\n      hibernate:\r\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\r\n        ddl-auto: update\r\n    generate-ddl: true\r\n    #是否打印sql语句\r\n    show-sql: false', '78aae1a8aed99c9b5f868454fdf8a8ba', '2021-01-12 15:56:50', '2021-01-12 07:56:51', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 71, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: true', '90f1d8b1523352f303a9a04caf517d44', '2021-01-12 17:07:19', '2021-01-12 09:07:20', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (56, 72, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\r\nspring:\r\n  thymeleaf: \r\n    cache: false\r\n    mode: HTML5\r\n    prefix: classpath:/templates/\r\n   #数据库\r\n  datasource: \r\n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    username: ${POSTGRES_USERNAME:root}\r\n    password: ${POSTGRES_PASSWORD:123456}\r\n    driver-class-name: com.mysql.cj.jdbc.Driver', 'af36ab2acf222b27be546b059beb51a8', '2021-01-12 17:56:06', '2021-01-12 09:56:07', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 73, 'demo1', 'DEFAULT_GROUP', '', '123', '202cb962ac59075b964b07152d234b70', '2021-01-14 15:56:55', '2021-01-14 07:56:55', NULL, '192.168.1.225', 'I', '');
INSERT INTO `his_config_info` VALUES (66, 74, 'demo1', 'DEFAULT_GROUP', '', '123', '202cb962ac59075b964b07152d234b70', '2021-01-14 16:05:02', '2021-01-14 08:05:02', NULL, '192.168.1.225', 'U', '');
INSERT INTO `his_config_info` VALUES (66, 75, 'demo1', 'DEFAULT_GROUP', '', '456', '250cf8b51c773f3f8dc8b4be867a9a02', '2021-01-14 16:06:06', '2021-01-14 08:06:07', NULL, '192.168.1.225', 'U', '');
INSERT INTO `his_config_info` VALUES (66, 76, 'demo1', 'DEFAULT_GROUP', '', '789', '68053af2923e00204c3ca7c6a3150cf7', '2021-01-14 16:08:50', '2021-01-14 08:08:50', NULL, '192.168.1.225', 'U', '');
INSERT INTO `his_config_info` VALUES (66, 77, 'demo1', 'DEFAULT_GROUP', '', '123', '202cb962ac59075b964b07152d234b70', '2021-01-14 16:09:15', '2021-01-14 08:09:16', NULL, '192.168.1.225', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 78, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', 'd158403e325bc5dbcae16a36a9cdfb40', '2021-01-18 11:43:40', '2021-01-18 03:43:41', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (66, 79, 'demo1', 'DEFAULT_GROUP', '', '456', '250cf8b51c773f3f8dc8b4be867a9a02', '2021-01-18 11:43:46', '2021-01-18 03:43:46', NULL, '192.168.216.1', 'D', '');
INSERT INTO `his_config_info` VALUES (55, 80, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: true', '90f1d8b1523352f303a9a04caf517d44', '2021-01-18 13:39:41', '2021-01-18 05:39:41', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 81, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', 'd158403e325bc5dbcae16a36a9cdfb40', '2021-01-20 18:07:56', '2021-01-20 10:07:57', NULL, '192.168.1.196', 'U', '');
INSERT INTO `his_config_info` VALUES (56, 82, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\nspring:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n   #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\nxiaoyuan: \n  login: \n    redirectUrl: \n      success: /index\n      fail: /login', '5886ca683d8e4d13a4ff8eae9cbda762', '2021-01-20 18:08:04', '2021-01-20 10:08:05', NULL, '192.168.1.196', 'U', '');
INSERT INTO `his_config_info` VALUES (5, 83, 'application-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  # redis 相关\n  redis:\n    host: base-redis\n    port: 6379\n    password: \n    database: 0\n# logging日志\nlogging:\n  level:\n    com.alibaba.nacos.client.naming: error\n    com.alibaba.nacos.client.config.impl: WARN\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n# feign 配置\nfeign:\n  hystrix:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n# hystrix If you need to use ThreadLocal bound variables in your RequestInterceptor`s\n# you will need to either set the thread isolation strategy for Hystrix to `SEMAPHORE or disable Hystrix in Feign.\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          strategy: SEMAPHORE\n          thread:\n            timeoutInMilliseconds: 60000\n  shareSecurityContext: true\n#请求处理的超时时间\nribbon:\n  ReadTimeout: 10000\n  ConnectTimeout: 10000\n\n## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      # 无需token访问的url,如果子模块重写这里的配置就会被覆盖\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://xiaoyuan-auth/oauth/check_token\n', 'a84dcf8776ef9621d47de21180d9bc51', '2021-01-20 18:10:58', '2021-01-20 10:10:59', NULL, '192.168.1.196', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 84, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '86dce513a644bedb77170e5c7055eaf3', '2021-01-20 18:23:58', '2021-01-20 10:23:59', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (56, 85, 'xiaoyuan-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\nspring:\n  thymeleaf: \n    cache: false\n    mode: HTML5\n    prefix: classpath:/templates/\n   #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123}\n    driver-class-name: com.mysql.cj.jdbc.Driver\nxiaoyuan: \n  login: \n    redirectUrl: \n      success: /index\n      fail: /login', '8584160974f96fff2b17fc3f9b409546', '2021-01-20 18:24:08', '2021-01-20 10:24:09', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 86, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', 'd158403e325bc5dbcae16a36a9cdfb40', '2021-01-21 10:50:39', '2021-01-21 02:50:39', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 87, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        - /swagger*\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', 'e6cb649a762539e7f4c3859b489e7deb', '2021-01-21 10:51:37', '2021-01-21 02:51:38', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 88, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        - /swagger-ui.html\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '69df16954eca13de195e681220eaf69a', '2021-01-21 10:54:18', '2021-01-21 02:54:18', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 89, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', 'd158403e325bc5dbcae16a36a9cdfb40', '2021-01-21 10:58:44', '2021-01-21 02:58:45', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 90, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        - /swagger-ui.html\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '69df16954eca13de195e681220eaf69a', '2021-01-21 11:02:12', '2021-01-21 03:02:13', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 91, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', 'd158403e325bc5dbcae16a36a9cdfb40', '2021-01-21 11:14:58', '2021-01-21 03:14:59', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 92, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        - /webjars/**\n        - /doc.html\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '0c1b8006937a6339ac9b5a884fef50b2', '2021-01-21 11:16:23', '2021-01-21 03:16:24', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 93, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        - /webjars/**\n        - /doc.html\n        - /swagger-resources/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '05173f5176bd3603196c7ebefff17969', '2021-01-21 11:19:28', '2021-01-21 03:19:29', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 94, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        #swagger接口文档允许不验证访问\n        - /webjars/**\n        - /doc.html\n        - /swagger-resources/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '1065720de92301342b27061fedff7f63', '2021-01-21 13:58:34', '2021-01-21 05:58:35', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 95, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        #swagger接口文档允许不验证访问\n        - /webjars/**\n        - /doc.html\n        - /swagger-resources/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false\n#swagger\nknife4j:\n  enableAggregation: true\n  nacos:\n    enable: true\n    serviceUrl: http://localhost:8848/\n    routes:\n      - name: 授权管理\n        serviceName: service-auth\n        location: /v2/api-docs?group=default\n        servicePath: /auth', '460f447f3a65f5bcb1ebbc36eb8d9c60', '2021-01-21 13:58:50', '2021-01-21 05:58:50', NULL, '192.168.216.1', 'U', '');
INSERT INTO `his_config_info` VALUES (55, 96, 'xiaoyuan-upms-admin-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: admin\n      client-secret: admin\n      scope: server\n      # 无需token访问的url\n      release-urls:\n        - /actuator/**\n        - /v2/api-docs\n        - /user/register\n        - /druid/**\n        #swagger接口文档允许不验证访问\n        - /webjars/**\n        - /doc.html\n        - /swagger-resources/**\n# 数据源\nspring:\n  #数据库\n  datasource: \n    url: jdbc:mysql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:3306}/xiaoyuan_cloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    username: ${POSTGRES_USERNAME:root}\n    password: ${POSTGRES_PASSWORD:123456}\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n        ddl-auto: update\n    generate-ddl: true\n    #是否打印sql语句\n    show-sql: false', '1065720de92301342b27061fedff7f63', '2021-01-21 15:54:00', '2021-01-21 07:54:01', NULL, '192.168.216.1', 'U', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', 'b693f8f0-49f0-484c-b248-4654e5a157c6', 'forward', 'forward', 'nacos', 1606901928180, 1606901928180);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
